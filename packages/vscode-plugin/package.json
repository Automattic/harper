{
	"name": "harper",
	"displayName": "Harper",
	"description": "The grammar checker for developers",
	"version": "0.23.0",
	"private": true,
	"author": "Elijah Potter",
	"publisher": "elijah-potter",
	"license": "Apache-2.0",
	"icon": "icon.png",
	"galleryBanner": {
		"color": "#F2F2F2",
		"theme": "light"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/automattic/harper"
	},
	"bugs": {
		"url": "https://github.com/automattic/harper/issues"
	},
	"engines": {
		"vscode": "^1.89.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"grammar",
		"spellcheck",
		"writing"
	],
	"activationEvents": [
		"onLanguage:c",
		"onLanguage:cmake",
		"onLanguage:cpp",
		"onLanguage:csharp",
		"onLanguage:dart",
		"onLanguage:git-commit",
		"onLanguage:go",
		"onLanguage:haskell",
		"onLanguage:html",
		"onLanguage:java",
		"onLanguage:javascript",
		"onLanguage:javascriptreact",
		"onLanguage:literate haskell",
		"onLanguage:lua",
		"onLanguage:markdown",
		"onLanguage:nix",
		"onLanguage:php",
		"onLanguage:plaintext",
		"onLanguage:python",
		"onLanguage:ruby",
		"onLanguage:rust",
		"onLanguage:shellscript",
		"onLanguage:swift",
		"onLanguage:toml",
		"onLanguage:typescript",
		"onLanguage:typescriptreact",
		"onLanguage:typst"
	],
	"main": "./build/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "harper.languageserver.restart",
				"title": "Harper: Restart Language Server",
				"description": "Restart harper-ls"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Harper",
			"properties": {
				"harper.path": {
					"scope": "resource",
					"type": "string",
					"description": "Optional path to a harper-ls executable to use."
				},
				"harper.codeActions.ForceStable": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "Make code actions appear in \"stable\" positions by placing code actions that should always be available like adding misspelled words in the dictionary first."
				},
				"harper.diagnosticSeverity": {
					"scope": "resource",
					"type": "string",
					"enum": [
						"error",
						"hint",
						"information",
						"warning"
					],
					"default": "information",
					"description": "How severe do you want diagnostics to appear in the editor?"
				},
				"harper.fileDictPath": {
					"scope": "resource",
					"type": "string",
					"description": "Optional path to a file dictionary directory to use."
				},
				"harper.isolateEnglish": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "Only lint English text in documents that are a mixture of English and another language."
				},
				"harper.markdown.IgnoreLinkTitle": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "Skip linting link titles."
				},
				"harper.userDictPath": {
					"scope": "resource",
					"type": "string",
					"description": "Optional path to a global dictionary file to use."
				},
				"harper.linters.AmazonNames": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to the various products of Amazon.com, make sure to treat them as a proper noun."
				},
				"harper.linters.Americas": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to North, Central, and South America, make sure to treat them as a proper noun."
				},
				"harper.linters.AnA": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "A rule that looks for incorrect indefinite articles. For example, `this is an mule` would be flagged as incorrect."
				},
				"harper.linters.AndIn": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Fixes the incorrect phrase `an in` to `and in` for proper conjunction usage."
				},
				"harper.linters.AndTheLike": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Fixes the typo in `and the like`."
				},
				"harper.linters.Anybody": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `anybody`."
				},
				"harper.linters.Anyhow": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `anyhow`."
				},
				"harper.linters.Anywhere": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `anywhere`."
				},
				"harper.linters.AppleNames": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to Apple products and services, make sure to treat them as proper nouns."
				},
				"harper.linters.Australia": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to the states of Australia, make sure to treat them as a proper noun."
				},
				"harper.linters.AvoidAndAlso": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Reduces redundancy by replacing `and also` with `and`."
				},
				"harper.linters.AvoidCurses": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "A rule that looks for common offensive language."
				},
				"harper.linters.AzureNames": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to Azure cloud services, make sure to treat them as proper nouns."
				},
				"harper.linters.BackInTheDay": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "This linter flags instances of the nonstandard phrase `back in the days`. The correct, more accepted form is `back in the day`"
				},
				"harper.linters.Backplane": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `backplane`."
				},
				"harper.linters.BadRap": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Changes `bed rap` to the proper idiom `bad rap`."
				},
				"harper.linters.BaitedBreath": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensures `bated breath` is written correctly, as `baited breath` is incorrect."
				},
				"harper.linters.BanTogether": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Detects and corrects the common error of using `ban together` instead of the idiom `band together`, which means to unite or join forces."
				},
				"harper.linters.BareInMind": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensures the phrase `bear in mind` is used correctly instead of `bare in mind`."
				},
				"harper.linters.BatedBreath": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Changes `baited breath` to the correct `bated breath`."
				},
				"harper.linters.BeckAndCall": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Fixes `back and call` to `beck and call`."
				},
				"harper.linters.BeenThere": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Corrects the misspelling `bee there` to the proper phrase `been there`."
				},
				"harper.linters.BoringWords": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "This rule looks for particularly boring or overused words. Using varied language is an easy way to keep a reader's attention."
				},
				"harper.linters.ByAccident": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Incorrect preposition: `by accident` is the idiomatic expression."
				},
				"harper.linters.CanBeSeen": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Corrects `can be seem` to the proper phrase `can be seen`."
				},
				"harper.linters.Canada": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to the provinces of Canada, make sure to treat them as a proper noun."
				},
				"harper.linters.CapitalizePersonalPronouns": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Forgetting to capitalize personal pronouns, like \"I\" or \"I'm\" is one of the most common errors. This rule helps with that."
				},
				"harper.linters.ChangeTack": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Locates minor errors in the sailing idiom `change tack`."
				},
				"harper.linters.ChineseCommunistParty": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to the political party, make sure to treat them as a proper noun."
				},
				"harper.linters.ChockFull": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Flags common soundalikes of \"chock-full\" and makes sure they're hyphenated."
				},
				"harper.linters.CompoundNouns": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Detects compound nouns split by a space and suggests merging them when both parts form a valid noun."
				},
				"harper.linters.CondenseAllThe": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Suggests removing `of` in `all of the` for a more concise phrase."
				},
				"harper.linters.CorrectNumberSuffix": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When making quick edits, it is common for authors to change the value of a number without changing its suffix. This rule looks for these cases, for example: `2st`."
				},
				"harper.linters.Countries": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to Countries, make sure to treat it as a proper noun."
				},
				"harper.linters.CurrencyPlacement": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "The location of currency symbols varies by country. The rule looks for and corrects improper positioning."
				},
				"harper.linters.DayOneNames": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensure proper capitalization of Day One and Day One Premium as brand names."
				},
				"harper.linters.Desktop": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `desktop`."
				},
				"harper.linters.DespiteOf": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Corrects the misuse of `despite of` and suggests the proper alternatives `despite` or `in spite of`."
				},
				"harper.linters.Devops": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `devops`."
				},
				"harper.linters.DotInitialisms": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensures common initialisms (like \"i.e.\") are properly dot-separated."
				},
				"harper.linters.EllipsisLength": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Make sure you have the correct number of dots in your ellipsis."
				},
				"harper.linters.EludedTo": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Corrects `eluded to` to `alluded to` in contexts referring to indirect references."
				},
				"harper.linters.EnMasse": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Detects variants like `on mass` or `in mass` and suggests `en masse`."
				},
				"harper.linters.Everywhere": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `everywhere`."
				},
				"harper.linters.ExpandTimeShorthands": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Expands time-related abbreviations (`hr`, `hrs`, `min`, `mins`, `sec`, `secs`, `ms`, `msec`, `msecs`) to their full forms (`hour`, `hours`, `minute`, `minutes`, `second`, `seconds`, `millisecond`, `milliseconds`)."
				},
				"harper.linters.FaceFirst": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensures `face first` is correctly hyphenated as `face-first` when used before `into`."
				},
				"harper.linters.FastPaste": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Detects incorrect usage of `fast paste` or `fast-paste` and suggests `fast-paced` as the correct phrase."
				},
				"harper.linters.FatalOutcome": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Replaces `fatal outcome` with the more direct term `death` for conciseness."
				},
				"harper.linters.Forthwith": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `forthwith`."
				},
				"harper.linters.Furthermore": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `furthermore`."
				},
				"harper.linters.GoingTo": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Corrects `gong to` to the intended phrase `going to`."
				},
				"harper.linters.GoogleNames": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to Google products and services, make sure to treat them as proper nouns."
				},
				"harper.linters.HadOf": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Flags the unnecessary use of `of` after `had` and suggests the correct forms."
				},
				"harper.linters.Henceforth": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `henceforth`."
				},
				"harper.linters.Hereby": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "`Here by` in some contexts should be `hereby`"
				},
				"harper.linters.Holidays": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to holidays, make sure to treat them as a proper noun."
				},
				"harper.linters.HopHope": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Handles common errors involving `hop` and `hope`. Ensures `hop` is used correctly in phrases like `hop on a bus` while correcting mistaken uses of `hope` in contexts where `hop` is expected."
				},
				"harper.linters.However": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `however`."
				},
				"harper.linters.HumanLife": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Changes `human live` to `human life`."
				},
				"harper.linters.HungerPang": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Corrects `hunger pain` to `hunger pang`."
				},
				"harper.linters.HyphenateNumberDay": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensures a hyphen is used in `X-day` when it is part of a compound adjective, such as `4-day work week`."
				},
				"harper.linters.IAm": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Fixes the incorrect spacing in `I a m` to properly form `I am`."
				},
				"harper.linters.InThe": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Detects and corrects a spacing error where `in the` is mistakenly written as `int he`. Proper spacing is essential for readability and grammatical correctness in common phrases."
				},
				"harper.linters.Insofar": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `insofar`."
				},
				"harper.linters.Instead": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `instead`."
				},
				"harper.linters.Intact": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `intact`."
				},
				"harper.linters.Into": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `into`."
				},
				"harper.linters.IsKnownFor": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Typo: `known` is the correct past participle."
				},
				"harper.linters.ItCan": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Corrects the misspelling `It cam` to the proper phrase `It can`."
				},
				"harper.linters.Itself": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `itself`."
				},
				"harper.linters.JetpackNames": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensure proper capitalization of Jetpack-related terms."
				},
				"harper.linters.KindRegards": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Changes `kid regards` to `kind regards`."
				},
				"harper.linters.Koreas": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to the nations, make sure to treat them as a proper noun."
				},
				"harper.linters.Laptop": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `laptop`."
				},
				"harper.linters.LeftRightHand": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensures `left hand` and `right hand` are hyphenated when used as adjectives before a noun, such as in `left-hand side` or `right-hand corner`."
				},
				"harper.linters.LetAlone": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Changes `let along` to `let alone`."
				},
				"harper.linters.LetsConfusion": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "It's often hard to determine where the subject should go with the word `let`. This rule attempts to find common errors with redundancy and contractions that may lead to confusion for readers."
				},
				"harper.linters.Likewise": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `likewise`."
				},
				"harper.linters.LinkingVerbs": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "Linking verbs connect nouns to other ideas. Make sure you do not accidentally link words that aren't nouns."
				},
				"harper.linters.LongSentences": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "This rule looks for run-on sentences, which can make your work harder to grok."
				},
				"harper.linters.Malaysia": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to the states of Malaysia and their capitals, make sure to treat them as a proper noun."
				},
				"harper.linters.Matcher": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "A collection of curated rules. A catch-all that will be removed in the future."
				},
				"harper.linters.MergeWords": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Accidentally inserting a space inside a word is common. This rule looks for valid words that are split by whitespace."
				},
				"harper.linters.MetaNames": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to Meta products and services, make sure to treat them as proper nouns."
				},
				"harper.linters.MicrosoftNames": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to Microsoft products and services, make sure to treat them as proper nouns."
				},
				"harper.linters.Middleware": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `middleware`."
				},
				"harper.linters.Misunderstand": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `misunderstand`."
				},
				"harper.linters.Misunderstood": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `misunderstood`."
				},
				"harper.linters.Misuse": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `misuse`."
				},
				"harper.linters.Misused": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `misused`."
				},
				"harper.linters.ModalOf": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Detects `of` mistakenly used with `would`, `could`, `should`, etc."
				},
				"harper.linters.Multicore": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `multicore`."
				},
				"harper.linters.Multimedia": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `multimedia`."
				},
				"harper.linters.MultipleSequentialPronouns": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When editing work to change point of view (i.e. first-person or third-person) it is common to add pronouns while neglecting to remove old ones. This rule catches cases where you have multiple disparate pronouns in sequence."
				},
				"harper.linters.Multithreading": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `multithreading`."
				},
				"harper.linters.MutePoint": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensures `moot point` is used instead of `mute point`, as `moot` means debatable or irrelevant."
				},
				"harper.linters.MyHouse": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Fixes the typo `mu house` to `my house`."
				},
				"harper.linters.Myself": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `myself`."
				},
				"harper.linters.NationalCapitals": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to national capitals, make sure to treat it as a proper noun."
				},
				"harper.linters.NeedHelp": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Changes `ned help` to the correct `need help`."
				},
				"harper.linters.NoOxfordComma": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "The Oxford comma is one of the more controversial rules in common use today. Enabling this lint checks that there is no comma before `and`, `or` or `nor` when listing out more than two ideas."
				},
				"harper.linters.Nobody": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `nobody`."
				},
				"harper.linters.Nonetheless": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `nonetheless`."
				},
				"harper.linters.NotTo": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Corrects `no to` to `not to`, ensuring proper negation."
				},
				"harper.linters.Nothing": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `nothing`."
				},
				"harper.linters.Notwithstanding": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `notwithstanding`."
				},
				"harper.linters.NumberSuffixCapitalization": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "You should never capitalize number suffixes."
				},
				"harper.linters.OceansAndSeas": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to the world's oceans and seas, ensure they are treated as proper nouns."
				},
				"harper.linters.OfCourse": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Detects the non‐idiomatic phrase `off course` and suggests the correct form `of course`."
				},
				"harper.linters.OperativeSystem": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensures `operating system` is used correctly instead of `operative system`."
				},
				"harper.linters.OperativeSystems": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensures `operating systems` is used correctly instead of `operative systems`."
				},
				"harper.linters.OutOfDate": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensures that the phrase `out of date` is written with a hyphen as `out-of-date` when used as a compound adjective."
				},
				"harper.linters.Overall": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `overall`."
				},
				"harper.linters.Overclocking": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `overclocking`."
				},
				"harper.linters.Overload": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `overload`."
				},
				"harper.linters.Overnight": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `overnight`."
				},
				"harper.linters.OxfordComma": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "The Oxford comma is one of the more controversial rules in common use today. Enabling this lint checks that there is a comma before `and`, `or`, or `nor` when listing out more than two ideas."
				},
				"harper.linters.PiqueInterest": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Detects incorrect usage of `peak` or `peek` when the intended word is `pique`, as in the phrase `you've peaked my interest`."
				},
				"harper.linters.PluralConjugate": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "Make sure you use the correct conjugation of the verb \"to be\" in plural contexts."
				},
				"harper.linters.PocketCastsNames": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensure proper capitalization of Pocket Casts and Pocket Casts Plus as brand names."
				},
				"harper.linters.PointIsMoot": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Typo: `moot` (meaning debatable) is correct rather than `mute`."
				},
				"harper.linters.PossessiveYour": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "The possessive version of `you` is more common before nouns."
				},
				"harper.linters.Postpone": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `postpone`."
				},
				"harper.linters.PronounContraction": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Choosing when to contract pronouns is a challenging art. This rule looks for faults."
				},
				"harper.linters.Proofread": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `proofread`."
				},
				"harper.linters.Regardless": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `regardless`."
				},
				"harper.linters.RepeatedWords": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "This rule looks for repetitions of words that are not homographs."
				},
				"harper.linters.RoadMap": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Detects when `roadmap` is used instead of `road map`, prompting the correct spacing."
				},
				"harper.linters.SameAs": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Corrects the incorrect phrase `same then` to the standard `same as`."
				},
				"harper.linters.SentenceCapitalization": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "The opening word of a sentence should almost always be capitalized."
				},
				"harper.linters.SneakingSuspicion": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Changes `sneaky suspicion` to `sneaking suspicion`."
				},
				"harper.linters.Somebody": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `somebody`."
				},
				"harper.linters.Somehow": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `somehow`."
				},
				"harper.linters.SomewhatSomething": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When describing a single instance of a noun, use `something` rather than `somewhat`."
				},
				"harper.linters.Somewhere": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `somewhere`."
				},
				"harper.linters.SoonerOrLater": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Fixes the improper phrase `sooner than later` by suggesting standard alternatives."
				},
				"harper.linters.Spaces": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Words should be separated by at most one space."
				},
				"harper.linters.SpecialAttention": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Changes `spacial attention` to `special attention`."
				},
				"harper.linters.SpellCheck": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks and provides corrections for misspelled words."
				},
				"harper.linters.SpelledNumbers": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "Most style guides recommend that you spell out numbers less than ten."
				},
				"harper.linters.StateOfTheArt": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Detects incorrect usage of `state of art` and suggests `state of the art` as the correct phrase."
				},
				"harper.linters.SupposedTo": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Fixes `suppose to` to the correct `supposed to`."
				},
				"harper.linters.TerminatingConjunctions": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Subordinating conjunctions are words that create a grammatical space for another idea or clause. As such, they should never appear at the end of a clause."
				},
				"harper.linters.ThatChallenged": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Changes `the challenged` to `that challenged` to fix the misspelling."
				},
				"harper.linters.ThatThis": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Fixes `the this` to the correct phrase `that this`."
				},
				"harper.linters.ThatWhich": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Repeating the word \"that\" is often redundant. The phrase `that which` is easier to read."
				},
				"harper.linters.ThenThan": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Corrects the misuse of `then` to `than`."
				},
				"harper.linters.Therefore": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `therefore`."
				},
				"harper.linters.Thereupon": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `thereupon`."
				},
				"harper.linters.ThoughtProcess": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Changes `though process` to `thought process`."
				},
				"harper.linters.TumblrNames": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensure proper capitalization of Tumblr-related terms."
				},
				"harper.linters.TurnItOff": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Fixes the mistake in the phrase `turn it off`."
				},
				"harper.linters.UnclosedQuotes": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Quotation marks should always be closed. Unpaired quotation marks are a hallmark of sloppy work."
				},
				"harper.linters.Underclock": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `underclock`."
				},
				"harper.linters.UnitedOrganizations": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "When referring to national or international organizations, make sure to treat them as a proper noun."
				},
				"harper.linters.Upset": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `upset`."
				},
				"harper.linters.Upward": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `upward`."
				},
				"harper.linters.UseGenitive": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "Looks for situations where the genitive case of \"there\" should be used."
				},
				"harper.linters.WantBe": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Detects incorrect usage of `want be` and suggests `won't be` or `want to be` based on context."
				},
				"harper.linters.WasAloud": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensures `was aloud` and `were aloud` are corrected to `was allowed` or `were allowed` when referring to permission."
				},
				"harper.linters.WaveFunction": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Identifies the mistake of merging `wave` and `function` into one word. In quantum mechanics, a `wave function` (written as two words) describes the mathematical function that represents the quantum state of a particle or system. Correct usage is crucial for clear and accurate scientific communication."
				},
				"harper.linters.Whereas": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "The Whereas rule is designed to identify instances where the phrase `where as` is used in text and suggests replacing it with the single word `whereas`."
				},
				"harper.linters.Whereupon": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `whereupon`."
				},
				"harper.linters.Widespread": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `widespread`."
				},
				"harper.linters.WillContain": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Incorrect verb form: `will` should be followed by the base form `contain`."
				},
				"harper.linters.WordPressDotcom": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Ensures correct capitalization of WordPress.com. This rule verifies that the official stylization of WordPress.com is used when referring to the hosting provider."
				},
				"harper.linters.Worldwide": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Looks for incorrect spacing inside the closed compound `worldwide`."
				},
				"harper.linters.WrongQuotes": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "The key on the keyboard often used as a quotation mark is actually a double-apostrophe. Use the correct character."
				}
			}
		}
	},
	"scripts": {
		"watch:esbuild": "node esbuild.cjs --watch",
		"watch:tsc": "tsc --noEmit --watch",
		"pretest": "yarn lint && tsc && node esbuild.cjs",
		"test": "node build/tests/runTests.js",
		"vscode:prepublish": "yarn lint && tsc --noEmit && node esbuild.cjs --production",
		"package": "vsce package",
		"lint": "eslint src --ext ts"
	},
	"devDependencies": {
		"@types/jasmine": "^5.1.7",
		"@types/node": "22.x",
		"@types/vscode": "^1.89.0",
		"@typescript-eslint/eslint-plugin": "^7.7.1",
		"@typescript-eslint/parser": "^7.7.1",
		"@vscode/test-electron": "^2.3.9",
		"@vscode/vsce": "^3.0.0",
		"esbuild": "^0.25.0",
		"eslint": "^8.57.0",
		"jasmine": "^5.6.0",
		"typescript": "^5.7.3"
	},
	"dependencies": {
		"vscode-languageclient": "^9.0.1"
	}
}
